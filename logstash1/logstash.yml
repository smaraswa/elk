apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: elk
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    input {
      http {
        port => 8080
        codec => "json"
      }
    }
    filter {
      date {
        match => [ "timeMillis", "UNIX_MS" ]
      }
    }
    output {
      elasticsearch {
        hosts => ["http://elasticsearch-0.elasticsearch:9200", "http://elasticsearch-1.elasticsearch:9200", "http://elasticsearch-2.elasticsearch:9200"]
        index => "http-logs"
      }
    }


apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: elk
spec:
  selector:
    matchLabels:
      app: logstash
  replicas: 1
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.9.0
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: config
              mountPath: /usr/share/logstash/config/logstash.yml
              subPath: logstash.yml
            - name: pipeline
              mountPath: /usr/share/logstash/pipeline
              subPath: pipeline.conf
        volumes:
          - name: config
            configMap:
              name: logstash-config
          - name: pipeline
            configMap:
              name: logstash-pipeline

---

apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: elk
spec:
  selector:
    app: logstash
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      nodePort: 31300
  type: NodePort
